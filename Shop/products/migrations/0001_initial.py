# Generated by Django 5.2.6 on 2025-09-25 18:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='نام برند')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='اسلاگ')),
            ],
            options={
                'verbose_name': 'برند',
                'verbose_name_plural': 'برندها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='رنگ')),
                ('code', models.CharField(blank=True, help_text='مثال: #000000', max_length=7, verbose_name='کد رنگ (اختیاری، HEX)')),
            ],
            options={
                'verbose_name': 'رنگ',
                'verbose_name_plural': 'رنگ\u200cها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='سایز')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب')),
            ],
            options={
                'verbose_name': 'سایز',
                'verbose_name_plural': 'سایزها',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام دسته')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='اسلاگ')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name': 'دسته',
                'verbose_name_plural': 'دسته\u200cها',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='نام محصول')),
                ('slug', models.SlugField(allow_unicode=True, unique=True, verbose_name='اسلاگ')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='قیمت پایه')),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, help_text='اگر خالی بماند همان قیمت پایه لحاظ می\u200cشود', max_digits=12, null=True, verbose_name='قیمت با تخفیف')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='ساخته\u200cشده')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='به\u200cروزرسانی')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/%Y/%m/', verbose_name='تصویر اصلی')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.category')),
            ],
            options={
                'verbose_name': 'محصول',
                'verbose_name_plural': 'محصولات',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/gallery/%Y/%m/', verbose_name='تصویر')),
                ('alt_text', models.CharField(blank=True, max_length=150, verbose_name='متن جایگزین')),
                ('is_main', models.BooleanField(default=False, verbose_name='تصویر اصلی؟')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': 'تصویر محصول',
                'verbose_name_plural': 'تصاویر محصول',
                'ordering': ['-is_main'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(help_text='کد یکتا برای انبار/فروش', max_length=40, unique=True, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=64, verbose_name='بارکد')),
                ('price_override', models.DecimalField(blank=True, decimal_places=2, help_text='اگر خالی باشد از قیمت محصول استفاده می\u200cشود', max_digits=12, null=True, verbose_name='قیمت اختصاصی')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='موجودی')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/variants/%Y/%m/', verbose_name='تصویر واریانت (اختیاری)')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='variations', to='products.color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.product')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='variations', to='products.size')),
            ],
            options={
                'verbose_name': 'واریانت محصول',
                'verbose_name_plural': 'واریانت\u200cهای محصول',
                'ordering': ['product', 'color__name', 'size__sort_order', 'size__name'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='products_pr_is_acti_ca4d9a_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand'], name='products_pr_brand_i_dc6890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='products_pr_categor_9edb3d_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariation',
            index=models.Index(fields=['product', 'is_active'], name='products_pr_product_192dcc_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariation',
            index=models.Index(fields=['color'], name='products_pr_color_i_83a178_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariation',
            index=models.Index(fields=['size'], name='products_pr_size_id_10d6ea_idx'),
        ),
        migrations.AddConstraint(
            model_name='productvariation',
            constraint=models.UniqueConstraint(fields=('product', 'color', 'size'), name='unique_variation_per_product_color_size'),
        ),
    ]
